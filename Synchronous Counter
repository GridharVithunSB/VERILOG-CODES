Synchronous Counter:


module syncounter(input clk,rst,output[3:0] cnt);
reg [3:0] cnt_up;
always@(posedgeclk or posedgerst)
begin 
if(rst)
cnt_up<=4'b0000;
else
cnt_up<= cnt_up+4'b0001;
end
assign cnt=cnt_up;
endmodule

Test Bench Code:

module syncountertb;
reg clk,rst;
wire [3:0]cnt;
syncounteruut(.clk(clk),.rst(rst),.cnt(cnt));
initial
begin 
clk=0;
forever #5 clk=~clk;
end
initial
begin
rst=1;
#20;
rst=0;
end
endmodule

PRESENT STATE NEXT STATE JK FLIP FLOP
Q3 Q2 Q1 Q0 Q3’ Q2’ Q1’ Q0’ J3K3 J2K2 J1K1 J0K0
0 0 0 0 0 0 0 1 0 X 0 X 0 X 1 X
0 0 0 1 0 0 1 0 0 X 0 X 1 X X 1
0 0 1 0 0 0 1 1 0 X 0 X X 0 1 X
0 0 1 1 0 1 0 0 0 X 1 X X 1 X 1
0 1` 0 0 0 1 0 1 0 X X 0 0 X 1 X
0 1 0 1 0 1 1 0 0 X X 0 1 X X 1
0 1 1 0 0 `1 1 1 0 X X 0 X 0 1 X
0 1 1 1 1 0 0 0 1 X X 1 X 1 X 1
1 0 0 0 1 0 0 1 X 0 0 X 0 X 1 X
1 0 0 1 1 0 1 0 X 0 0 X 0 X X 1
1 0 1 0 1 0 1 1 X 0 0 X X 1 0 X
1 0 1 1 1 1 0 0 X 0 0 X X 1 X 1
1 1 0 0 1 1 0 1 X 0 X 1 0 X 0 X
1 1 0 1 1 1 1 0 X 0 X 1 0 X X 1
1 1 1 0 1 1 1 1 X 0 X 0 X 0 1 X
1 1 1 1 0 0 0 0 X 1 X 1 X 1 X 1
