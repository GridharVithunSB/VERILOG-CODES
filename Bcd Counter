Bcd Counter:


module bcdcounter(
input clk, reset,upordown, output reg[3:0]count);
// down counter59
always @(posedge clk or posedge reset)
begin
if(reset==1)
count =0;
else if(upordown==1)
if(count==9)
count=0;
else
count = count+ 1;
else
if (count==0)
count=9;
else
count <= count - 1;
end 
endmodule

Test Bench Code:

module bcdcountertb;
reg clk, reset,upordown;
wire [3:0] count;60
bcdcounteruut(.clk(clk), .reset(reset),.upordown(upordown), 
.count(count));
initial begin 
clk=0;
forever #5 clk=~clk;
end
initial begin
reset=1;
upordown=0;
#20;
reset=0;
#200;
upordown=1;
end
endmodule

BCD counter:
PRESENT STATE  NEXT STATE  O/P  D FLIP FLOP
Q3 Q2 Q1 Q0 Q3’ Q2’ Q1’ Q0’ Y J8K8 J4K4 J2K2 J0K0
0 0 0 0 0 0 0 1 0 0X 0X 0X 1X
0 0 0 1 0 0 1 0 0 0X 0X 1X X1
0 0 1 0 0 0 1 1 0 0X 0X X0 1X
0 0 1 1 0 1 0 0 0 0X 1X X1 X1
0 1` 0 0 0 1 0 1 0 0X X0 0X 1X
0 1 0 1 0 1 1 0 0 0X X0 1X X1
0 1 1 0 0 `1 1 1 0 0X X0 X0 1X
0 1 1 1 1 0 0 0 0 1X X1 X1 X1
1 0 0 0 1 0 0 1 0 X0 0X 0X 1X
1 0 0 1 0 0 0 0 1 X1 0X 0X X1


JK flip flop characteristics:
Qn Qn+1 Jn Kn
0 0 0 X
0 1 1 X
1 0 X 1
1 1 X 0
